package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.24

import (
	"context"
	"fmt"

	"github.com/roderm/graphql-gateway-examples/example-1/accounts/graph/data"
	generated1 "github.com/roderm/graphql-gateway-examples/example-1/accounts/graph/generated"
)

// SayHi is the resolver for the sayHi field.
func (r *aWSUserResolver) SayHi(ctx context.Context, obj *data.AWSUser, name *string) (string, error) {
	if name == nil {
		return "", fmt.Errorf("argument is nil")
	}
	return fmt.Sprintf("Hi %v, from %v", *name, obj.Username), nil
}

// SayHi is the resolver for the sayHi field.
func (r *gitHubUserResolver) SayHi(ctx context.Context, obj *data.GitHubUser, name *string) (string, error) {
	if name == nil {
		return "", fmt.Errorf("argument is nil")
	}
	return fmt.Sprintf("Hi %v, from %v", *name, obj.Username), nil
}

// Me is the resolver for the me field.
func (r *queryResolver) Me(ctx context.Context) (data.User, error) {
	return data.User1, nil
}

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, id string) (data.User, error) {
	switch id {
	case "1":
		return data.User1, nil
	case "2":
		return data.User2, nil
	}
	return nil, fmt.Errorf("not found")
}

// AWSUser returns generated1.AWSUserResolver implementation.
func (r *Resolver) AWSUser() generated1.AWSUserResolver { return &aWSUserResolver{r} }

// GitHubUser returns generated1.GitHubUserResolver implementation.
func (r *Resolver) GitHubUser() generated1.GitHubUserResolver { return &gitHubUserResolver{r} }

// Query returns generated1.QueryResolver implementation.
func (r *Resolver) Query() generated1.QueryResolver { return &queryResolver{r} }

type aWSUserResolver struct{ *Resolver }
type gitHubUserResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//  - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//    it when you're done.
//  - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *aWSUserResolver) SayHiTo(ctx context.Context, obj *data.AWSUser, name string) (string, error) {
	return fmt.Sprintf("Hi %s", obj.Username), nil
}
func (r *gitHubUserResolver) SayHiTo(ctx context.Context, obj *data.GitHubUser, name string) (string, error) {
	return fmt.Sprintf("Hi %s", obj.Username), nil
}
